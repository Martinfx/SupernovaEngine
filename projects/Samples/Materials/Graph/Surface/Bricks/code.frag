const vec2 id_34 = parallaxMapping(t_Displacement, getTexCoord0(), getViewDir(), getNormal(), properties.fs_scale);
const float id_24 = 0.000000;
const vec4 id_15 = texture(t_Albedo, id_34);
const vec3 id_40 = sRGBToLinear(id_15.xyz);
const bool id_43 = inRange(id_34);
const float id_3 = 1.500000;
const float id_4 = 0.000000;
const float id_5 = 0.000000;
const vec3 id_6 = vec3(1, 1, 1);
const float id_7 = 1.000000;
const vec3 id_26 = sampleNormalMap(t_Normal, id_34);
const bvec3 id_47 = bvec3(false, true, false);
const vec3 id_45 = flip(id_26, id_47);
const vec3 id_29 = tangentToWorld(id_45, getNormal(), getTexCoord0());
const float id_9 = 0.000000;
const float id_10 = 0.900000;
const float id_11 = 1.000000;
const vec3 id_12 = vec3(0, 0, 0);
const float id_13 = 1.000000;
material.baseColor = id_40;
material.opacity = float(id_43);
material.ior = id_3;
material.transmissionFactor = id_4;
material.thickness = id_5;
material.attenuationColor = id_6;
material.attenuationDistance = id_7;
material.normal = id_29;
material.metallic = id_9;
material.roughness = id_10;
material.specular = id_11;
material.emissiveColor = id_12;
material.ambientOcclusion = id_13;
