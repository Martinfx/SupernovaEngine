const vec3 id_1 = vec3(1, 1, 1);
const vec4 id_18 = getScreenCoord();
const vec2 id_28 = vec2(1, 3);
const float id_23 = u_Frame.time * properties.fs_speed;
const vec2 id_26 = tileAndOffset(id_18.xy, id_28, id_23);
const float id_17 = 0.000000;
const vec4 id_14 = texture(t_fs_15, id_26);
const float id_3 = 1.500000;
const float id_4 = 0.000000;
const float id_5 = 0.000000;
const vec3 id_6 = vec3(1, 1, 1);
const float id_7 = 1.000000;
const float id_9 = 1.000000;
const float id_10 = 1.000000;
const float id_11 = 1.000000;
const float id_36 = 0.020000;
const float id_33 = rand(u_Frame.time.xx);
const float id_35 = step(id_36, id_33);
const float id_72 = 1.000000;
const float id_71 = id_72 - id_14.x;
const vec3 id_65 = properties.fs_baseColor.xyz * properties.fs_baseColor.w;
const vec3 id_83 = id_71 * id_65;
const vec3 id_43 = properties.fs_edgeColor.xyz * properties.fs_edgeColor.w;
const float id_58 = 2.000000;
const float id_55 = fresnelEffect(getNormal(), getViewDir(), id_58);
const vec3 id_52 = id_43 * id_55;
const vec3 id_68 = id_83 + id_52;
const vec3 id_80 = id_35 * id_68;
const float id_13 = 1.000000;
material.baseColor = id_1;
material.opacity = id_14.x;
material.ior = id_3;
material.transmissionFactor = id_4;
material.thickness = id_5;
material.attenuationColor = id_6;
material.attenuationDistance = id_7;
material.normal = getNormal();
material.metallic = id_9;
material.roughness = id_10;
material.specular = id_11;
material.emissiveColor = id_80;
material.ambientOcclusion = id_13;
