const vec3 id_1 = vec3(1, 1, 1);
const vec4 id_15 = getScreenCoord();
const vec2 id_47 = vec2(1, 3);
const float id_52 = u_Frame.time * properties.fs_speed;
const vec2 id_45 = tileAndOffset(id_15.xy, id_47, id_52);
const float id_44 = 0.000000;
const vec4 id_35 = texture(t_34, id_45);
const float id_3 = 1.500000;
const float id_4 = 0.000000;
const float id_5 = 0.000000;
const vec3 id_6 = vec3(1, 1, 1);
const float id_7 = 1.000000;
const float id_9 = 1.000000;
const float id_10 = 1.000000;
const float id_11 = 1.000000;
const float id_85 = 0.020000;
const float id_90 = rand(u_Frame.time.xx);
const float id_84 = step(id_85, id_90);
const float id_74 = 1.000000;
const float id_73 = id_74 - id_35.x;
const vec3 id_67 = properties.fs_baseColor.xyz * properties.fs_baseColor.w;
const vec3 id_56 = id_73 * id_67;
const vec3 id_20 = properties.fs_edgeColor.xyz * properties.fs_edgeColor.w;
const float id_19 = 2.000000;
const float id_16 = fresnelEffect(getNormal(), getViewDir(), id_19);
const vec3 id_31 = id_20 * id_16;
const vec3 id_76 = id_56 + id_31;
const vec3 id_87 = id_84 * id_76;
const float id_13 = 1.000000;
material.baseColor = id_1;
material.opacity = id_35.x;
material.ior = id_3;
material.transmissionFactor = id_4;
material.thickness = id_5;
material.attenuationColor = id_6;
material.attenuationDistance = id_7;
material.normal = getNormal();
material.metallic = id_9;
material.roughness = id_10;
material.specular = id_11;
material.emissiveColor = id_87;
material.ambientOcclusion = id_13;
