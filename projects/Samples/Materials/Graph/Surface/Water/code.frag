const vec3 id_1 = vec3(1, 1, 1);
const float id_2 = 1.000000;
const float id_3 = 1.500000;
const float id_4 = 1.000000;
const vec3 id_6 = vec3(1, 1, 1);
const float id_7 = 1.000000;
const vec2 id_22 = vec2(1, 1);
const float id_38 = -0.040000;
const float id_36 = u_Frame.time * id_38;
const vec2 id_20 = tileAndOffset(getTexCoord0(), id_22, id_36);
const vec3 id_14 = sampleNormalMap(t_fs_15, id_20);
const vec2 id_26 = vec2(5, 5);
const float id_41 = -0.080000;
const float id_39 = u_Frame.time * id_41;
const vec2 id_24 = tileAndOffset(getTexCoord0(), id_26, id_39);
const vec3 id_17 = sampleNormalMap(t_fs_18, id_24);
const vec3 id_28 = id_14 + id_17;
const vec3 id_31 = tangentToWorld(id_28, getNormal(), getTexCoord0());
const float id_9 = 0.000000;
const float id_10 = 0.000000;
const float id_11 = 1.000000;
const vec3 id_12 = vec3(0, 0, 0);
const float id_13 = 1.000000;
material.baseColor = id_1;
material.opacity = id_2;
material.ior = id_3;
material.transmissionFactor = id_4;
material.thickness = properties.fs_thickness;
material.attenuationColor = id_6;
material.attenuationDistance = id_7;
material.normal = id_31;
material.metallic = id_9;
material.roughness = id_10;
material.specular = id_11;
material.emissiveColor = id_12;
material.ambientOcclusion = id_13;
